// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketingSystem.Core.Database;

#nullable disable

namespace TicketingSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240927123016_DatabseSetup")]
    partial class DatabseSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "TicketStatusEnum", "ticket_status_enum", new[] { "open", "in_progress", "resolved" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "TicketTypeEnum", "ticket_type_enum", new[] { "bug", "improvement", "epic" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicketingSystem.Common.Models.TicketEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AffectedVersion")
                        .HasColumnType("text");

                    b.Property<Guid?>("Assignee")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid[]>("RelatedElements")
                        .HasColumnType("uuid[]");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("tickets", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
